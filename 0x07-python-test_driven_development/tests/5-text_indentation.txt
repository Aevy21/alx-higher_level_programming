"""
    Test the text_indentation function with various scenarios.

Author: Avumile Ndlovu

"""

>>> text_indentation = __import__('5-text_indentation').text_indentation

# Scenario 1: Basic Usage
>>> text = "This is a simple text. It has a question: What's next?"
>>> text_indentation(text)
This is a simple text.
<BLANKLINE>
<BLANKLINE>
It has a question:
<BLANKLINE>
<BLANKLINE>
What's next?
<BLANKLINE>
<BLANKLINE>

# Scenario 2: Empty String
>>> text = ""
>>> text_indentation(text)


# Scenario 3: String without Punctuation
>>> text = "This string has no punctuation characters"
>>> text_indentation(text)
This string has no punctuation characters

# Scenario 4: 
>>> text = "Multiple dots... Some questions"
>>> text_indentation(text)
Multiple dots
<BLANKLINE>
<BLANKLINE>
<BLANKLINE>
<BLANKLINE>
<BLANKLINE>
Some questions

# Scenario 5: Leading and Trailing Whitespace
>>> text = "   Text with leading and trailing spaces.   "
>>> text_indentation(text)
Text with leading and trailing spaces

# Scenario 6: Non-String Input
>>> text = 123  # or any non-string input
>>> text_indentation(text)
Traceback (most recent call last):
    â€¦
TypeError: text must be a string

# Scenario 7: Complex Sentences
>>> text = "This is a sentence with multiple clauses. It contains questions: What is the first question? What is the second question? And what about the third one?"
>>> text_indentation(text)
This is a sentence with multiple clauses
<BLANKLINE>
It contains questions
<BLANKLINE>
What is the first question
<BLANKLINE>
What is the second question
<BLANKLINE>
And what about the third one

# Scenario 8: Mix of Punctuation Characters
>>> text = "This string has dots. It also has colons: like this one. Questions are here? What about exclamation marks!"
>>> text_indentation(text)# This string has dots
This string has dots
<BLANKLINE>
It also has colons
<BLANKLINE>
like this one
<BLANKLINE>
Questions are here
<BLANKLINE>
What about exclamation marks

