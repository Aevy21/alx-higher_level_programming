add_integer Function Documentation

Note: This function is designed to add typecasted integers and floats. Using any other types may result in undefined behavior.

# Parameters:

- a (int or float):** First number.
- b (int or float, optional):** Second number. Default is 98.

# Returns:

- int: The sum of a and b, casted to an integer.

# Raises:

- TypeError: If either a or b is not an integer or float.

>>> add_integer = __import__('0-add_integer').add_integer

# Example Usage (Non-Interactive):

#python3

>>> add_integer(3, 5)
8

>>> add_integer(2.5, 7)
9

>>> add_integer(2.5, 7.3)
9

>>> add_integer(0, 0)
0

>>> add_integer(-5, 10)
5

>>> add_integer(-2.7, 5.3)
3

>>> add_integer(True, False)
1

>>> add_integer(2)
100

>>> add_integer(99999999999999999999999, 1)
100000000000000000000000

>>> add_integer(2, b="world")
Traceback (most recent call last):
    ...
TypeError: b must be an integer or float

>>> add_integer(2.5, "hello")
Traceback (most recent call last):
    ...
TypeError: b must be an integer or float

>>> add_integer("world", 5)
Traceback (most recent call last):
    ...
TypeError: a must be an integer or float

# Example Usage (Interactive):

>>> add_integer(2, b=98)
100

>>> add_integer(2.5)
100

>>> add_integer(1, "2")
Traceback (most recent call last):
        ...
TypeError: b must be an integer or float

>>> add_integer("1", 2)
Traceback (most recent call last):
        ...
TypeError: a must be an integer or float

