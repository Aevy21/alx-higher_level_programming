"""
Test cases for the say_my_name function and how it is expected to produce the output

using Print(a formatted message with the given first and last name.)

"""

>>> say_my_name = __import__('3-say_my_name').say_my_name

# Test 1: Normal case with both first and last name
>>> say_my_name("John", "Smith")
My name is John Smith$

# Test 2: Case with only a first name
>>> say_my_name("Alice")
My name is Alice$

# Test 3: Case with empty strings
>>> say_my_name("", "")
My name is $

# Test 4: Case with no last name (default value)
>>> say_my_name("Bob")
My name isBob$

# Test 5: Case with non-string inputs (expecting a TypeError)
>>> say_my_name(123, "Doe")
Traceback (most recent call last):
    ...
TypeError: first_name must be a string or last_name must be a string$

# Test 6: Case with Unicode characters
>>> say_my_name("M치rio", "L칩pez")
My name is M치rio L칩pez$

# Test 7:Case with leading and trailing whitespaces
>>> say_my_name("  Charlie  ", " Brown ")
My name is  Charlie    Brown $

# Test 8:Case with very long names
>>> say_my_name("X" * 100, "Y" * 150)
My name is X * 100 Y * 150 $

# Test 9:Case with mixed-case names
>>> say_my_name("mary", "JOHNSON")
mary JOHNSON$

# Test 10: Case with special characters
>>> say_my_name("David#", "$Goliath")
My name is David# $Goliath$

# Test 11: Case with no names provided (expecting a TypeError)
>>> say_my_name()
Traceback (most recent call last):
    ...
TypeError: first_name must be a string or last_name must be a string$

